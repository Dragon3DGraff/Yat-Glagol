#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç API /friends –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
 */

const axios = require("axios")

async function testFriendsAPI() {
  try {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /friends...")

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ 401)
    console.log("üîß –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...")
    try {
      const response = await axios.get("http://localhost:3001/api/friends")
      console.log("‚ùå –û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ 401, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏:", response.status)
    } catch (error) {
      if (error.response?.status === 401) {
        console.log("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É 401 (–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)")
      } else {
        console.log(
          "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:",
          error.response?.status,
          error.message
        )
      }
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log("\nüîß –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...")
    try {
      const response = await axios.get("http://localhost:3001/api/friends", {
        headers: {
          Authorization: "Bearer invalid-token",
        },
      })
      console.log("‚ùå –û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ 401, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏:", response.status)
    } catch (error) {
      if (error.response?.status === 401) {
        console.log("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É 401 (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω)")
      } else {
        console.log(
          "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:",
          error.response?.status,
          error.message
        )
      }
    }

    console.log("\nüéâ –¢–µ—Å—Ç API –∑–∞–≤–µ—Ä—à–µ–Ω!")
    console.log("üìù –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω")
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:", error.message)
  }
}

testFriendsAPI()
