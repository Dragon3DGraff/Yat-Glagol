#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—Ä—É–∑–µ–π –≤ Sequelize (—Ä–µ–∞–ª—å–Ω–∞—è –ë–î)
 */

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –ë–î
process.env.USE_MOCK_DB = "false"
process.env.NODE_ENV = "development"

console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –≤ Sequelize...")
console.log("USE_MOCK_DB:", process.env.USE_MOCK_DB)
console.log("NODE_ENV:", process.env.NODE_ENV)

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º SequelizeAdapter
const { SequelizeAdapter } = require("./dist/database/SequelizeAdapter.js")

async function testSequelizeFriends() {
  const sequelizeDB = new SequelizeAdapter()

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    console.log("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Sequelize...")
    await sequelizeDB.initialize()
    console.log("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–∑–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 1
    console.log("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: 1...")
    const friends = await sequelizeDB.getFriends(1)
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${friends.length} –¥—Ä—É–∑–µ–π:`)
    friends.forEach((friend, index) => {
      console.log(
        `  ${index + 1}. ${friend.username} (ID: ${friend.id}, Status: ${
          friend.status
        })`
      )
    })

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥—Ä—É–∂–±—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 1
    console.log(
      "\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥—Ä—É–∂–±—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: 1..."
    )
    const requests = await sequelizeDB.getFriendRequests(1)
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${requests.length} –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:`)
    requests.forEach((request, index) => {
      console.log(`  ${index + 1}. –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${request.from_user_id}`)
    })

    console.log("\nüéâ –¢–µ—Å—Ç Sequelize –¥—Ä—É–∑–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Sequelize –¥—Ä—É–∑–µ–π:", error.message)
    console.error("Stack:", error.stack)
  } finally {
    await sequelizeDB.close()
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSequelizeFriends()
