#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—Ä—É–∑–µ–π –≤ –º–æ–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
 */

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
process.env.USE_MOCK_DB = "true"
process.env.NODE_ENV = "development"

console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –≤ –º–æ–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ...")

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º MockAdapter
const { MockAdapter } = require("./dist/mock/MockAdapter.js")

async function testFriends() {
  const mockDB = new MockAdapter()

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    await mockDB.initialize()
    console.log("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–∑–µ–π –¥–ª—è Alice (ID: 1)
    console.log("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –¥–ª—è Alice (ID: 1)...")
    const aliceFriends = await mockDB.getFriends(1)
    console.log(`‚úÖ Alice –∏–º–µ–µ—Ç ${aliceFriends.length} –¥—Ä—É–∑–µ–π:`)
    aliceFriends.forEach((friend, index) => {
      console.log(
        `  ${index + 1}. ${friend.friend.username} (ID: ${friend.friend.id})`
      )
    })

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–∑–µ–π –¥–ª—è Bob (ID: 2)
    console.log("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –¥–ª—è Bob (ID: 2)...")
    const bobFriends = await mockDB.getFriends(2)
    console.log(`‚úÖ Bob –∏–º–µ–µ—Ç ${bobFriends.length} –¥—Ä—É–∑–µ–π:`)
    bobFriends.forEach((friend, index) => {
      console.log(
        `  ${index + 1}. ${friend.friend.username} (ID: ${friend.friend.id})`
      )
    })

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥—Ä—É–∂–±—É –¥–ª—è Charlie (ID: 3)
    console.log("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥—Ä—É–∂–±—É –¥–ª—è Charlie (ID: 3)...")
    const charlieRequests = await mockDB.getFriendRequests(3)
    console.log(`‚úÖ Charlie –∏–º–µ–µ—Ç ${charlieRequests.length} –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:`)
    charlieRequests.forEach((request, index) => {
      console.log(
        `  ${index + 1}. –û—Ç ${request.from_username} (ID: ${
          request.from_user_id
        })`
      )
    })

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è Alice (ID: 1)
    console.log("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Alice (ID: 1)...")
    const aliceSentRequests = await mockDB.getSentFriendRequests(1)
    console.log(`‚úÖ Alice –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ ${aliceSentRequests.length} –∑–∞–ø—Ä–æ—Å–æ–≤:`)
    aliceSentRequests.forEach((request, index) => {
      console.log(
        `  ${index + 1}. –ö ${request.to_username} (ID: ${request.to_user_id})`
      )
    })

    console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –¥—Ä—É–∑–µ–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–∑–µ–π:", error.message)
    console.error("Stack:", error.stack)
  } finally {
    await mockDB.close()
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testFriends()
