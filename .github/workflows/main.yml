name: Deploy to server

env:
  DEPLOY_SERVER_PATH: ixiaolong.ru/site
  BUILD_SERVER_OUTPUT: server/dist
  DEPLOY_CLIENT_PATH: ixiaolong.ru/site/client
  BUILD_CLIENT_OUTPUT: client/dist

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 22.18.x
      # Записываем в переменные окружения имя текущей ветки
      # Чтобы избежать конфиликтов с URL, меняем точки на _, а слеши на минусы
      - name: Get branch name
        shell: bash
        run: echo "name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g' | sed 's/\./_/g')" >> $GITHUB_ENV
      # Устанавливаем зависимости для сборки
      - name: Install Dependencies
        run: npm run install-all
      # Создаем .env файлы из secrets
      - name: Create Server .env file
        run: |
          echo "PORT=${{ secrets.SERVER_PORT }}" > server/.env
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> server/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> server/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> server/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> server/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> server/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> server/.env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> server/.env
          echo "NODE_ENV=production" >> server/.env
          echo "USE_MOCK_DB=false" >> server/.env

      - name: Create Client .env file
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > client/.env
          echo "VITE_SOCKET_URL=${{ secrets.VITE_SOCKET_URL }}" >> client/.env
          echo "VITE_STUN_SERVERS=${{ secrets.VITE_STUN_SERVERS }}" >> client/.env
          echo "VITE_APP_NAME=Ять-глагол" >> client/.env
          echo "VITE_APP_VERSION=1.0.0" >> client/.env
          echo "VITE_DEV_MODE=false" >> client/.env

      # Собираем приложение
      - name: Build Application
        run: npm run build

      # Копируем .env файл в папку dist для деплоя
      - name: Copy server .env to dist
        run: cp server/.env server/dist/.env

      # Копируем package.json и package-lock.json для установки зависимостей на сервере
      - name: Copy package files to dist
        run: |
          cp server/package.json server/dist/package.json
          cp server/package-lock.json server/dist/package-lock.json

      - name: Deploy Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          source: ${{ env.BUILD_SERVER_OUTPUT }}
          target: ${{ env.DEPLOY_SERVER_PATH }}
          rm: false
          strip_components: 1

      # Устанавливаем зависимости на сервере
      - name: Install Server Dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          script: |
            cd ${{ env.DEPLOY_SERVER_PATH }}
            npm ci --production
            pm2 restart all || pm2 start index.js --name "yat-glagol-server"

      - name: Deploy client
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          source: ${{ env.BUILD_CLIENT_OUTPUT }}
          target: ${{ env.DEPLOY_CLIENT_PATH }}
          rm: false
          strip_components: 1

      - name: Print Info
        run: echo "Deployed to ixiaolong.ru/site"
