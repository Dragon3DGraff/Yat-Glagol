name: Deploy to server

env:
  DEPLOY_SERVER_PATH: ixiaolong.ru/site
  BUILD_SERVER_OUTPUT: deploy-server
  DEPLOY_CLIENT_PATH: ixiaolong.ru/site/client
  BUILD_CLIENT_OUTPUT: client/dist

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 22.18.x
      # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
      # –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–∏–ª–∏–∫—Ç–æ–≤ —Å URL, –º–µ–Ω—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞ _, –∞ —Å–ª–µ—à–∏ –Ω–∞ –º–∏–Ω—É—Å—ã
      - name: Get branch name
        shell: bash
        run: echo "name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g' | sed 's/\./_/g')" >> $GITHUB_ENV
      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏
      - name: Install Dependencies
        run: npm run install-all
      # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª—ã –∏–∑ secrets
      - name: Create Server .env file
        run: |
          echo "PORT=${{ secrets.SERVER_PORT }}" > server/.env
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> server/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> server/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> server/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> server/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> server/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> server/.env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> server/.env
          echo "NODE_ENV=production" >> server/.env
          echo "USE_MOCK_DB=false" >> server/.env

      - name: Create Client .env file
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > client/.env
          echo "VITE_SOCKET_URL=${{ secrets.VITE_SOCKET_URL }}" >> client/.env
          echo "VITE_STUN_SERVERS=${{ secrets.VITE_STUN_SERVERS }}" >> client/.env
          echo "VITE_APP_NAME=–Ø—Ç—å-–≥–ª–∞–≥–æ–ª" >> client/.env
          echo "VITE_APP_VERSION=1.0.0" >> client/.env
          echo "VITE_DEV_MODE=false" >> client/.env

      # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      - name: Build Application
        run: npm run build

      # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è (–±–∞–Ω–¥–ª + mysql2)
      - name: Prepare server files
        run: |
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è
          mkdir -p deploy-server
          # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π –±–∞–Ω–¥–ª (–µ–¥–∏–Ω—ã–π —Ñ–∞–π–ª)
          cp server/dist/index.js deploy-server/
          # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª  
          cp server/.env deploy-server/
          # –ö–æ–ø–∏—Ä—É–µ–º package.json –¥–ª—è mysql2
          cp server/package.prod.json deploy-server/package.json
          # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π package-lock.json –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
          echo '{"lockfileVersion": 2}' > deploy-server/package-lock.json

      - name: Deploy Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          source: deploy-server
          target: ${{ env.DEPLOY_SERVER_PATH }}
          rm: false
          strip_components: 1

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      - name: Install Server Dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          script: |
            echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===" 

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
            source ~/.bashrc 2>/dev/null || true
            source ~/.profile 2>/dev/null || true
            source ~/.bash_profile 2>/dev/null || true

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ Node.js (–≤–∫–ª—é—á–∞—è Passenger –ø—É—Ç—å)
            export PATH="$HOME/.local/bin:/usr/local/bin:/opt/nodejs/bin:/usr/bin:/bin:$PATH"
            export PATH="$HOME/.nvm/versions/node/*/bin:$PATH"
            export PATH="/usr/local/nodejs/bin:$PATH"

            echo "–¢–µ–∫—É—â–∏–π PATH: $PATH"

            # –ò—â–µ–º Node.js –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–æ–º–∞—à–Ω–µ–π –ø–∞–ø–∫–µ)
            NODE_PATH=""
            for path in "$HOME/.local/bin/node" "/usr/local/bin/node" "/usr/bin/node" "/opt/nodejs/bin/node" "$HOME/.nvm/versions/node/*/bin/node" "/usr/local/nodejs/bin/node"; do
                if [ -f "$path" ] 2>/dev/null || [ -f $(echo $path) ] 2>/dev/null; then
                    NODE_PATH=$(dirname "$path")
                    export PATH="$NODE_PATH:$PATH"
                    echo "–ù–∞–π–¥–µ–Ω Node.js –≤: $path"
                    break
                fi
            done

            echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∏ npm ==="
            if command -v node >/dev/null 2>&1; then
                echo "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $(node --version)"
            else
                echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
                which node 2>/dev/null || echo "node: –Ω–µ –Ω–∞–π–¥–µ–Ω"
                ls -la /usr/local/bin/node* 2>/dev/null || echo "–í /usr/local/bin –Ω–µ—Ç node"
                ls -la /usr/bin/node* 2>/dev/null || echo "–í /usr/bin –Ω–µ—Ç node"
                exit 1
            fi

            if command -v npm >/dev/null 2>&1; then
                echo "‚úÖ npm –Ω–∞–π–¥–µ–Ω: $(npm --version)"
            else
                echo "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                exit 1
            fi

            echo "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ==="
            cd ${{ env.DEPLOY_SERVER_PATH }}
            pwd
            ls -la

            echo "üîç Node.js –≤–µ—Ä—Å–∏—è: $(node --version)"
            echo "üîç npm –≤–µ—Ä—Å–∏—è: $(npm --version)"
            echo "üìã package.json —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
            cat package.json

            echo "=== –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ë–î ==="

            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sequelize –∏ mysql2
            DB_MODULES_INSTALLED=false

            # –°–ø–æ—Å–æ–± 1: –û–±—ã—á–Ω—ã–π npm install —Å package.json
            echo "üîÑ –°–ø–æ—Å–æ–± 1: npm install (package.json)"
            if npm install --production --no-audit --legacy-peer-deps 2>/dev/null; then
                echo "‚úÖ –°–ø–æ—Å–æ–± 1 —É—Å–ø–µ—à–µ–Ω"
                DB_MODULES_INSTALLED=true
            else
                echo "‚ùå –°–ø–æ—Å–æ–± 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
            fi

            # –°–ø–æ—Å–æ–± 2: yarn (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if [ "$DB_MODULES_INSTALLED" = false ] && command -v yarn >/dev/null 2>&1; then
                echo "üîÑ –°–ø–æ—Å–æ–± 2: yarn"
                if yarn install --production 2>/dev/null; then
                    echo "‚úÖ –°–ø–æ—Å–æ–± 2 (yarn) —É—Å–ø–µ—à–µ–Ω"
                    DB_MODULES_INSTALLED=true
                else
                    echo "‚ùå –°–ø–æ—Å–æ–± 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
                fi
            fi

            # –°–ø–æ—Å–æ–± 3: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ npm
            if [ "$DB_MODULES_INSTALLED" = false ]; then
                echo "üîÑ –°–ø–æ—Å–æ–± 3: –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ npm"
                rm -rf ~/.npm node_modules
                npm cache clean --force 2>/dev/null || true
                if npm install --production --no-package-lock --force 2>/dev/null; then
                    echo "‚úÖ –°–ø–æ—Å–æ–± 3 —É—Å–ø–µ—à–µ–Ω"
                    DB_MODULES_INSTALLED=true
                else
                    echo "‚ùå –°–ø–æ—Å–æ–± 3 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
                fi
            fi

            # –°–ø–æ—Å–æ–± 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
            if [ "$DB_MODULES_INSTALLED" = false ]; then
                echo "üîÑ –°–ø–æ—Å–æ–± 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏"
                mkdir -p node_modules
                if npm install sequelize mysql2 --production --no-package-lock 2>/dev/null; then
                    echo "‚úÖ –°–ø–æ—Å–æ–± 4 —É—Å–ø–µ—à–µ–Ω - –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ"
                    DB_MODULES_INSTALLED=true
                else
                    echo "‚ùå –°–ø–æ—Å–æ–± 4 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
                fi
            fi

            echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ==="
            if [ "$DB_MODULES_INSTALLED" = true ]; then
                echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ë–î —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
                echo "üìã –†–∞–∑–º–µ—Ä node_modules: $(du -sh node_modules/ 2>/dev/null)"
                echo "üìä –ú–æ–¥—É–ª–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $(ls -1 node_modules/ | wc -l)"
                
                if [ -d "node_modules/sequelize" ]; then
                    echo "‚úÖ sequelize –Ω–∞–π–¥–µ–Ω"
                else
                    echo "‚ùå sequelize –ù–ï –Ω–∞–π–¥–µ–Ω"
                fi
                
                if [ -d "node_modules/mysql2" ]; then
                    echo "‚úÖ mysql2 –Ω–∞–π–¥–µ–Ω"
                else
                    echo "‚ùå mysql2 –ù–ï –Ω–∞–π–¥–µ–Ω"
                fi
            else
                echo "‚ùå –í—Å–µ —Å–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ë–î –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏"
                echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ npm:"
                cat ~/.npm/_logs/*.log 2>/dev/null | tail -20 || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ npm"
                echo "‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –º–æ–¥—É–ª–µ–π –ë–î - –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ë–î"
            fi

            echo "=== –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Passenger –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ==="

            # Passenger –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤
            # –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º restart.txt –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            mkdir -p tmp
            touch tmp/restart.txt
            echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Passenger"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if [ -f "index.js" ]; then
                echo "‚úÖ index.js (–±–∞–Ω–¥–ª) –Ω–∞–π–¥–µ–Ω - $(ls -lh index.js)"
            else
                echo "‚ùå index.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                exit 1
            fi

            if [ -f ".env" ]; then
                echo "‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
            else
                echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                exit 1
            fi

            if [ -d "node_modules/sequelize" ] && [ -d "node_modules/mysql2" ]; then
                echo "‚úÖ Sequelize ORM –∏ mysql2 –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
            else
                echo "‚ö†Ô∏è  –ú–æ–¥—É–ª–∏ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏"
                echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ USE_MOCK_DB=true –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ë–î –≤—Ä—É—á–Ω—É—é"
                
                if [ ! -d "node_modules/sequelize" ]; then
                    echo "‚ùå sequelize –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                fi
                
                if [ ! -d "node_modules/mysql2" ]; then
                    echo "‚ùå mysql2 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                fi
            fi

            echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É Passenger"
            echo "Passenger –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ"

      - name: Deploy client
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          source: ${{ env.BUILD_CLIENT_OUTPUT }}
          target: ${{ env.DEPLOY_CLIENT_PATH }}
          rm: false
          strip_components: 1

      - name: Print Info
        run: echo "Deployed to ixiaolong.ru/site"
